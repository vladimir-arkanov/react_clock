{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentDay","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","nameOfClock","props","debug","clearInterval","className","React","Component","App","clockName","hasClock","getRandomName","value","now","toString","handleClick","handleContext","event","preventDefault","document","addEventListener","removeEventListener","Box","sx","display","CircularProgress","color","ReactDOM","render","getElementById"],"mappings":"wQAWaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAAIC,MAFpB,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,WAAY,IAAIC,OAEhCM,QAAQC,MAAK,IAAIP,MAAOQ,cAAcC,OAAO,IAAK,MACjD,OAZP,gCAeE,SAAmBC,GACjB,IAAQC,EAAgBT,KAAKU,MAArBD,YAEJD,EAAUC,cAAgBA,GAE5BL,QAAQO,MAAR,uBAA8BH,EAAUC,YAAxC,eAA0DA,MApBhE,kCAwBE,WACER,OAAOW,cAAcZ,KAAKD,WAzB9B,oBA4BE,WACE,IAAQF,EAAeG,KAAKJ,MAApBC,WACAY,EAAgBT,KAAKU,MAArBD,YAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGH,wCAEA,sBAAMI,UAAU,cAAhB,SACGhB,EAAWS,cAAcC,OAAO,IAAK,YAzChD,GAA2BO,IAAMC,WCApBC,EAAb,4MACEpB,MAAQ,CACNqB,UAAW,UACXC,UAAU,GAHd,EAMEnB,QAAU,EANZ,EAsBEoB,cAAgB,WACd,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWf,OAAO,GAE3C,MAAM,SAAN,OAAgBa,IAzBpB,EA4BEG,YAAc,WACZ,EAAKpB,SAAS,CAAEe,UAAU,KA7B9B,EAgCEM,cAAgB,SAACC,GACfA,EAAMC,iBACN,EAAKvB,SAAS,CAAEe,UAAU,KAlC9B,uDAQE,WAA2B,IAAD,OACxBS,SAASC,iBAAiB,cAAe5B,KAAKwB,eAC9CG,SAASC,iBAAiB,QAAS5B,KAAKuB,aACxCvB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEc,UAAW,EAAKE,oBAC/B,QAbP,kCAgBE,WACEQ,SAASE,oBAAoB,cAAe7B,KAAKwB,eACjDG,SAASE,oBAAoB,QAAS7B,KAAKuB,aAC3CtB,OAAOW,cAAcZ,KAAKD,WAnB9B,oBAqCE,WACE,IAAQkB,EAAcjB,KAAKJ,MAAnBqB,UACAC,EAAalB,KAAKJ,MAAlBsB,SAER,OACE,qCACE,qBAAKL,UAAU,MAAf,SACE,oBAAIA,UAAU,aAAd,2BAGAK,EACE,cAAC,EAAD,CAAOT,YAAaQ,IAEpB,cAACa,EAAA,EAAD,CAAKjB,UAAU,WAAWkB,GAAI,CAAEC,QAAS,QAAzC,SACE,cAACC,EAAA,EAAD,CAAkBC,MAAM,qBAnDtC,GAAyBpB,IAAMC,WCR/BoB,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.31b3e6c4.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype State = {\n  currentDay: Date;\n};\n\ntype Props = {\n  nameOfClock: string\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    currentDay: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ currentDay: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const { nameOfClock } = this.props;\n\n    if (prevProps.nameOfClock !== nameOfClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.nameOfClock} to ${nameOfClock}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { currentDay } = this.state;\n    const { nameOfClock } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {nameOfClock}\n        </strong>\n\n        <p>time is</p>\n\n        <span className=\"Clock__time\">\n          {currentDay.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleContext);\n    document.addEventListener('click', this.handleClick);\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.handleContext);\n    document.removeEventListener('click', this.handleClick);\n    window.clearInterval(this.timerId);\n  }\n\n  getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleContext = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { clockName } = this.state;\n    const { hasClock } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1 className=\"App__title\">React clock</h1>\n        </div>\n\n        { hasClock\n          ? <Clock nameOfClock={clockName} />\n          : (\n            <Box className=\"Awaiting\" sx={{ display: 'flex' }}>\n              <CircularProgress color=\"inherit\" />\n            </Box>\n          )}\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}